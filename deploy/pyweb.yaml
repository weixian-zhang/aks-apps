apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: pywebapp-internal-gateway
spec:
  selector:
    istio: aks-istio-ingressgateway-internal
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"

---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: pywebapp-virtual-service
spec:
  hosts:
  - "*"
  gateways:
  - pywebapp-internal-gateway
  http:
  - match:
    - uri:
        exact: /ready
    - uri:
        prefix: /alive
    route:
    - destination:
        host: web-pyapp-service.web-dev.svc.cluster.local
        port:
          number: 80
---
# deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-pyapp
  namespace: web-dev
  labels:
    app: web-pyapp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: web-pyapp
  template:
    metadata:
      labels:
        app: web-pyapp
        azure.workload.identity/use: "true"
    spec:
      containers:
      - name: web-pyapp
        image: acraksapps1.azurecr.io/pyweb/pyweb:v1
        imagePullPolicy: "Always"
        ports:
        - containerPort: 5000
        volumeMounts:
            - name: volume-azurefile
              mountPath: /mnt/azure
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /alive
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
      
---

apiVersion: v1
kind: Service
metadata:
  name: web-pyapp-service
  namespace: web-dev
spec:
  selector:
    app: web-pyapp
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  type: ClusterIP

